# Generated by Django 4.1.7 on 2023-04-27 22:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    replaces = [('djangocopy', '0001_initial'), ('djangocopy', '0002_historicalcopy_historicalnavbar_historicalpage'), ('djangocopy', '0003_auto_20190806_1308'), ('djangocopy', '0004_auto_20190807_2329'), ('djangocopy', '0005_auto_20190807_2333'), ('djangocopy', '0006_auto_20190810_1524'), ('djangocopy', '0007_auto_20220219_1612'), ('djangocopy', '0008_auto_20220225_1800'), ('djangocopy', '0009_alter_historicalcopy_options_and_more')]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255)),
                ('template', models.FileField(upload_to='djangocopy/templates/')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(upload_to='djangocopy/images/')),
            ],
        ),
        migrations.CreateModel(
            name='Copy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, help_text='URL name (leave empty to load for all templates)', max_length=255)),
                ('fieldid', models.SlugField(help_text='The field identifier that will be used in templates', max_length=100)),
                ('locale', models.CharField(blank=True, help_text="Browser settings (e.g. 'en_GB')", max_length=5)),
                ('geo', models.CharField(blank=True, help_text="Country code derived from the IP (e.g. 'GB')", max_length=2)),
                ('text', models.TextField(max_length=10000)),
                ('format', models.CharField(choices=[('p', 'Plain text'), ('m', 'Markdown'), ('j', 'JSON'), ('h', 'HTML'), ('s', 'Special HTML')], default='p', max_length=1)),
                ('status', models.CharField(choices=[('d', 'Draft'), ('p', 'Published')], default='d', max_length=1)),
            ],
            options={
                'verbose_name_plural': 'copy',
                'unique_together': {('fieldid', 'url', 'locale', 'geo', 'status')},
            },
        ),
        migrations.CreateModel(
            name='HistoricalCopy',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('url', models.CharField(blank=True, help_text='URL name (leave empty to load for all templates)', max_length=255)),
                ('fieldid', models.SlugField(help_text='The field identifier that will be used in templates', max_length=100)),
                ('locale', models.CharField(blank=True, help_text="Browser settings (e.g. 'en_GB')", max_length=5)),
                ('geo', models.CharField(blank=True, help_text="Country code derived from the IP (e.g. 'GB')", max_length=2)),
                ('text', models.TextField(max_length=10000)),
                ('format', models.CharField(choices=[('p', 'Plain text'), ('m', 'Markdown'), ('j', 'JSON'), ('h', 'HTML'), ('s', 'Special HTML')], default='p', max_length=1)),
                ('status', models.CharField(choices=[('d', 'Draft'), ('p', 'Published')], default='d', max_length=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical copy',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
                'verbose_name_plural': 'historical copy',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNavbar',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('logo', models.ForeignKey(blank=True, db_constraint=False, help_text='A picture to use as a logo', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='djangocopy.image')),
                ('elements', models.JSONField()),
                ('z_index', models.IntegerField(default=0, help_text='The z-index determines the order of navbar items. A higher value appears first.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('label', models.CharField(default='Blank', max_length=255)),
            ],
            options={
                'verbose_name': 'historical navbar',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
                'verbose_name_plural': 'historical navbars',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255)),
                ('authenticated', models.BooleanField(default=False, help_text='If True, visitor must login to access this page')),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('keywords', models.CharField(blank=True, default='', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='djangocopy.template')),
            ],
            options={
                'verbose_name': 'historical page',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
                'verbose_name_plural': 'historical pages',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ForeignKey(blank=True, help_text='A picture to use as a logo', null=True, on_delete=django.db.models.deletion.SET_NULL, to='djangocopy.image')),
                ('elements', models.JSONField()),
                ('z_index', models.IntegerField(default=0, help_text='The z-index determines the order of navbar items. A higher value appears first.')),
                ('groups', models.ManyToManyField(blank=True, help_text='Associate navbar with a particular user group.', to='auth.group')),
                ('label', models.CharField(default='Blank', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('authenticated', models.BooleanField(default=False, help_text='If True, visitor must login to access this page')),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('keywords', models.CharField(blank=True, default='', max_length=255)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='djangocopy.template')),
                ('groups', models.ManyToManyField(blank=True, help_text='If populated, only members of these groups can view the page (authenticated flag is then ignored).', to='auth.group')),
            ],
        ),
    ]
